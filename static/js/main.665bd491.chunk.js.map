{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","assets/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleChange","fetchedCountries","setFetchCountries","countryData","fetchCountry","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.665bd491.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1ifrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1hH1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2_ckA\",\"card\":\"Card_card__eXW5N\",\"infected\":\"Card_infected__1n6Rr\",\"recovered\":\"Card_recovered__3LqjF\",\"deaths\":\"Card_deaths__Ac1zg\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst Cards = (props) => {\r\n  const { data } = props;\r\n  const { confirmed, recovered, deaths, lastUpdate } = data;\r\n\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async ( country ) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData)=>({\r\n      confirmed : dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n\r\n    }));\r\n    \r\n    return modifiedData;\r\n\r\n  }catch (error){\r\n\r\n  }\r\n}\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries} } = await axios.get(`${url}/countries`);\r\n    \r\n    return countries.map((country) => country.name);\r\n\r\n  }catch (error){\r\n\r\n  }\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = (props) => {\r\n  const { data, country }= props;\r\n  const { confirmed, recovered, deaths } = data;\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const dailyData = await fetchDailyData();\r\n      setDailyData(dailyData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const lineChart =( dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null);\r\n\r\n\r\n  const barChart = (\r\n    confirmed?(\r\n    <Bar \r\n      data={{\r\n        labels: ['Infected', 'Confirmed', 'Deaths'],\r\n        datasets: [{\r\n          label: 'People',\r\n          backgroundColor: ['rgba(0,0,255,0.5)','rgb(0, 255, 0, 0.5)','rgb(255, 0, 0,  0.5)'],\r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n        }]\r\n      }}\r\n      options={{\r\n        legend: {display: false,},\r\n        title: {display: true, text: `Current state in ${country}`}\r\n      }}\r\n    />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n  <div className={styles.container}>{country ? barChart : lineChart}</div>);\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = (props) => {\r\n  const { handleChange } = props;\r\n  const [fetchedCountries, setFetchCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountry = async () => {\r\n      const countryData = await fetchCountries();\r\n      setFetchCountries(countryData);\r\n    };\r\n    fetchCountry();\r\n  }, [setFetchCountries]);\r\n\r\n\r\n  return(\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue='' onChange={(e) =>{handleChange(e.target.value)}}>\r\n        <option value=''>Global</option>\r\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n   )\r\n  }\r\n\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nimport coronaImage from './assets/image.png';\r\nclass App extends Component {\r\n  state = { data: {}, country:''};\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({data: fetchedData});\r\n  }\r\n  \r\n  handleChange = async ( country ) => {\r\n  const fetchedData = await fetchData(country)\r\n\r\n  this.setState({data: fetchedData, country: country});\r\n\r\n  }\r\n\r\n  render() {\r\n    const{ data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleChange={this.handleChange}/>\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MTng\",\"image\":\"App_image__2zNl7\"};"],"sourceRoot":""}